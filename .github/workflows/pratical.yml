name: EKS setups 
on:
  workflow_dispatch:  

env: 
  AWS_ACCESS_KEY : ${{secrets.ACCESS_KEY}}
  AWS_SECRET_KEY: ${{secrets.SECRET_KEY}}
  AWS_BUCKET: ${{secrets.BUCKET}}
  aws_region: us-east-1
  aws_cluster: cluster_eks



jobs:
  eks_setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init 
        run: terraform init -backend-config="bucket=${{env.AWS_BUCKET}}"

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform format
        id: fmt 
        run: terraform fmt

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -out=planfile -input=false

      - name: error in plan
        id: error
        if: steps.plan.outcome == 'failure'
        run: exit code 1

      - name: Terraform apply
        id: apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -input=false -auto-approve -parallelism=1 planfile


      - name: aws config 
        id: config
        if: steps.apply.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'us-east-1'
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}

      - name: cluster 
        id: eks
        if: steps.apply.outcome == 'success' && steps.config.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{env.aws_region}} --name ${{env.aws_cluster}}

      - name: ingress
        id: ingress
        if: steps.eks.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/aws/deploy.yaml





      
